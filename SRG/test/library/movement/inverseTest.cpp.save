#ifndef INVERSETEST_C
#define INVERSETEST_C

#include "/home/pi/systemTest/library/allLib.h"
#include "/home/pi/systemTest/library/movement/moveArray.h"
#include "/home/pi/systemTest/library/dynamixel/syncWrite.cpp"

int main(){

if(dxl_initialize(0,1)==0){
        cout<<"Error connecting"<<endl;
        return 0;
    }
    
else{
		cout<<"connect success!"<<endl;
	}

while(1){
	double x,y,z,sudutX,sudutY,sudutZ,x2,y2,z2,sudutX2,sudutY2,sudutZ2,sudutNgurang;
	int speed;

/*        cout<<"Masukkan sudut X: ";
        cin>>sudutX;
        cout<<"Masukkan sudut Y: ";
        cin>>sudutY;
        cout<<"Masukkan sudut Z: ";
        cin>>sudutZ;

	cout<<"Masukkan X: ";
	cin>>x;
	cout<<"Masukkan Y: ";
	cin>>y;
	cout<<"Masukkan Z: ";
	cin>>z;*/
       inverseAndre(sudutX,sudutY,sudutZ,x,y,z,sudutX2,sudutY2,sudutZ2,x2,y2,z2,50,'1');
	cout<<"Masukkan Speed: ";
	//cin>>speed;
	sleep(5);
		//kirimPacketInverse(x,y);

	//for(int i=1;i<=10;i++){
	 for(int i=0;i<=150;i++){

	sudutNgurang=2.4*i;
        x=-11.2-sin(sudutNgurang*3.14/180)*2;
        y=-4*sin(sudutNgurang*3.14/180);//2.4
        z=-2*sin(sudutNgurang*3.14/180);
        sudutX=-1.5*/*sin(sudutNgurang*3.14/180);*/(pow(sin(sudutNgurang*3.14/180),2));
        sudutY=5;//+sin(sudutNgurang*3.14/180);
        sudutZ=0;//3*(pow(sin(sudutNgurang*3.14/180),2));
	x2=-11.2+sin(sudutNgurang*3.14/180)*2;
      y2=-4*sin(sudutNgurang*3.14/180);//2.4
      z2=2*sin(sudutNgurang*3.14/180);
	sudutX2=-1.5*/*sin(sudutNgurang*3.14/180);*/(pow(sin(sudutNgurang*3.14/180),2));
        sudutY2=5;//-sin(sudutNgurang*3.14/180);
        sudutZ2=0;//-3*(pow(sin(sudutNgurang*3.14/180),2));

       if (i<0 && i>38){
        sudutNgurang=2.4*i;
        x=-11.2-sin(sudutNgurang*3.14/180)*2;
        y=-4*sin(sudutNgurang*3.14/180);//2.4
	z=0;
        sudutX=-1.5*sin(sudutNgurang*3.14/180);/*(pow(sin(sudutNgurang*3.14/180),2));*/
        sudutY=5;//+sin(sudutNgurang*3.14/180);
        sudutZ=0;//3*(pow(sin(sudutNgurang*3.14/180),2));
        x2=-11.2+sin(sudutNgurang*3.14/180)*2;
        y2=-4*sin(sudutNgurang*3.14/180);//2.4
        z2=0
        sudutX2=-1.5*sin(sudutNgurang*3.14/180);\*(pow(sin(sudutNgurang*3.14/180),2));
        sudutY2=5;//-sin(sudutNgurang*3.14/180);
        sudutZ2=0;//-3*(pow(sin(sudutNgurang*3.14/180),2));

	}
	inverseAndre(sudutX,sudutY,sudutZ,x,y,z,sudutX2,sudutY2,sudutZ2,x2,y2,z2,100,'2');
//	sleep(1);
	}
}

}

#endif
